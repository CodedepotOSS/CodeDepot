<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2009 SRA (Software Research Associates, Inc.)

 This file is part of CodeDepot.
 CodeDepot is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License version 3.0
 as published by the Free Software Foundation and appearing in
 the file GPL.txt included in the packaging of this file.

 CodeDepot is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with CodeDepot. If not, see <http://www.gnu.org/licenses/>.
-->
<!DOCTYPE sqlMap
    PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="account">

 	<typeAlias alias="accountBean" type="jp.co.sra.codedepot.admin.db.entity.AccountEntity" />
 	<select id="selectSrchLstCount" parameterClass="java.util.Map"
  		resultClass="java.lang.Integer">
	    	SELECT
	    		count(1)
	    	FROM
	    		member
      		WHERE
      			del_flag = false
   			<isPropertyAvailable prepend="AND" property="username">
				username like '%'||#username#||'%'
			</isPropertyAvailable>
  	</select>

  	<select id="selectSrchLst" parameterClass="java.util.Map"
  		resultClass="jp.co.sra.codedepot.admin.db.entity.AccountEntity">
	    	SELECT
	    		id as id,
	    		username as username,
	    		email as email,
	    		role as role,
	    		def_lang as deflang,
	    		note as note,
	    		active as active
	    	FROM
	    		member
      		WHERE
      			del_flag = false
   			<isPropertyAvailable prepend="AND" property="username">
				username like '%'||#username#||'%'
			</isPropertyAvailable>
      		ORDER BY
      			username ASC
			<isPropertyAvailable property="limit">
				LIMIT #limit#
			</isPropertyAvailable>
			<isPropertyAvailable property="offset">
				OFFSET #offset#
			</isPropertyAvailable>
  	</select>

  	<delete id="deleteAccount" parameterClass="java.util.Map">
	    UPDATE
	    	member
	    SET
	         del_flag = true
            ,muserid = #loginId#
            ,mtime = NOW()
      	WHERE
      		username IN ($usernames$)
      	AND
      		del_flag = false
  	</delete>

	<resultMap id="checkMember" class="jp.co.sra.codedepot.admin.db.entity.AccountEntity">
    	<result     property="id"     	     column="id" />
  	</resultMap>

  <select id="selectManager"  resultMap="checkMember">
    SELECT id FROM member
      WHERE LOWER(username) = #value#
      AND del_flag = 'false'
      AND active = 'true'
      AND role = 1
  </select>

 <select id="selectUser"  resultMap="checkMember">
    SELECT id FROM member
      WHERE LOWER(username) = #value#
      AND del_flag = 'false'
      AND active = 'true'
  </select>

  <!-- ログインの情報を取得する -->
  <select id="getLoginInfo" parameterClass="java.lang.String" resultClass="accountBean">
  	<![CDATA[
		SELECT
		 	id
		   ,username
		   ,role
		   ,password
		   ,active
		   ,def_lang as deflang
		FROM
			member
		WHERE
			username = #username#
		AND
			del_flag = false
	]]>
 </select>

 <!-- アクセス権限の情報を取得する -->
 <select id="getPermitPrjInfo" parameterClass="java.lang.Integer"
 		resultClass="java.lang.String">
 	<![CDATA[
 		SELECT
 			pe.project
 		FROM
 			permit pe
 			,project pj
 		WHERE
 		    pe.project = pj.name
 		AND
 			pe.mid = #loginId#
 	]]>
 </select>

 <!-- アカウントのパスワード情報を変更する -->
 <update id="updatePersonPwd" parameterClass="accountBean">
 	<![CDATA[
    	UPDATE member
    	SET
      		password=#password#
      	   ,pwd_mtime=now()
      	   ,mtime=now()
      	   ,muserid=#muserid#
  		WHERE
  			id=#muserid#
  		AND
  			del_flag=false
  		AND
  			active=true
	]]>
 </update>

  <!-- アカウント情報を変更する -->
  <update id="updatePersonInfo" parameterClass="accountBean">
  	<![CDATA[
    	UPDATE member
    	SET
      		email=#email#
      	   ,def_lang=#deflang#
      	   ,mtime=now()
      	   ,muserid=#muserid#
  		WHERE
  			id=#muserid#
  		AND
  			del_flag=false
  		AND
  			active=true
	]]>
 </update>

   <!-- パスワードを取得する -->
   <select id="getPwdInfo" parameterClass="java.lang.Integer" resultClass="java.lang.String">
  	<![CDATA[
		SELECT
		    password
		FROM
			member
		WHERE
			id = #id#
		AND
			active = true
		AND
			del_flag = false
	]]>
 </select>

 <!-- 個人情報を取得する -->
 <select id = "getPersonInfo" parameterClass="java.lang.Integer" resultClass="accountBean">
 	<![CDATA[
		SELECT
		     password
		    ,email
		    ,def_lang as deflang
		FROM
			member
		WHERE
			id = #id#
		AND
			active = true
		AND
			del_flag = false
	]]>
 </select>

	<!--データベースのユーザ管理テーブルから指定されたアカウント名に対応するデータを抽出する-->
	<select id="getMemberByUsername" parameterClass="java.util.Map"
		resultClass="java.lang.Integer">
	    	SELECT
	    		count(1)
	    	FROM
	    		member
	  		WHERE
	  			del_flag = false
	  		AND username = ''||#username#||''
	</select>

    <!-- アカウント情報がデータベースのアカウント情報テーブルに登録される。 -->
    <insert id="insertMember" parameterClass="java.util.Map">
        INSERT INTO MEMBER <!-- ユーザ情報テーブル -->
              (
                username            <!-- アカウント名 -->
				,password           <!-- パスワード -->
               ,pwd_mtime           <!-- パスワード更新 -->
               ,email               <!-- メールアドレス -->
               ,role                <!-- 管理グループ番号 -->
               ,def_lang            <!-- デフォント検索言語 -->
               ,note                <!-- 管理者コメント -->
               ,active              <!-- ログイン有効フラグ -->
               ,del_flag            <!-- 削除フラグ -->
               ,cuserid             <!-- 作成者 -->
               ,ctime               <!-- 作成時刻 -->
               ,muserid             <!-- 更新者 -->
               ,mtime               <!-- 更新時刻 -->
              ) VALUES (
                #username#          <!-- 「アカウント名」 -->
			   ,#password#          <!-- ハッシュ化パスワード -->
               ,NOW()           	<!-- システム日時 -->
               ,#email#             <!-- 「メールアドレス」 -->
               ,#role#              <!-- 管理グループ番号 -->
               ,#def_lang#          <!-- 「デフォント検索言語」 -->
               ,#note#              <!-- 「管理者コメント」 -->
               ,#active#            <!-- ログイン有効フラグ -->
               ,FALSE          		<!-- FALSE -->
               ,#cuserid#           <!-- ログインID -->
               ,NOW()               <!-- システム日時 -->
               ,#cuserid#           <!-- ログインID -->
               ,NOW()               <!-- システム日時 -->
              )
    </insert>

    <!-- 自動アカウント登録 -->
    <insert id="registMember" parameterClass="accountBean">
        INSERT INTO MEMBER <!-- ユーザ情報テーブル -->
              (
               id
               ,username            <!-- アカウント名 -->
               ,email               <!-- メールアドレス -->
               ,note                <!-- 管理者コメント -->
               ,active              <!-- ログイン有効フラグ -->
               ,del_flag            <!-- 削除フラグ -->
               ,cuserid             <!-- 作成者 -->
               ,ctime               <!-- 作成時刻 -->
               ,muserid             <!-- 更新者 -->
               ,mtime               <!-- 更新時刻 -->
              ) VALUES (
                #id#                <!-- 「アカウントID」 -->
               ,#username#          <!-- 「アカウント名」 -->
               ,#email#             <!-- 「メールアドレス」 -->
               ,#note#              <!-- 「管理者コメント」 -->
               ,TRUE          	    <!-- TRUE -->
               ,FALSE          	    <!-- FALSE -->
               ,#id#           	    <!-- ログインID -->
               ,NOW()               <!-- システム日時 -->
               ,#id#           		<!-- ログインID -->
               ,NOW()               <!-- システム日時 -->
              )
    <selectKey resultClass="java.lang.Integer" type="pre" keyProperty="id">
        SELECT NEXTVAL('member_id_seq')
    </selectKey>

    </insert>

    <!-- 画面のアカウント名テキストボックスにより、アカウント情報が変更される -->
    <update id="updateMember" parameterClass="java.util.Map">
    	UPDATE MEMBER
    	SET
		<isPropertyAvailable property="password">
			 password = #password#,
			 pwd_mtime = NOW(),
		</isPropertyAvailable>
             email = #email#                <!-- メールアドレス -->
            ,role = #role#                  <!-- 管理グループ番号 -->
            ,def_lang = #def_lang#          <!-- デフォント検索言語 -->
            ,note = #note#                	<!-- 管理者コメント -->
            ,active = #active#              <!-- ログイン有効フラグ -->
            ,muserid = #muserid#            <!-- 更新者 -->
            ,mtime = NOW()               	<!-- 更新時刻 -->
    	WHERE del_flag = false				<!-- 削除フラグ -->
    	  AND username = #username#			<!-- アカウント名 -->
    </update>

    <!-- アカウント詳細情報画面用、アカウント名により、アカウント詳細情報を取得する -->
    <select id="getAccountDetailInfo" parameterClass="java.lang.String" resultClass="accountBean">
  	<![CDATA[
		SELECT
		    username
		   ,email
		   ,role
		   ,pwd_mtime as pwdmtime
		   ,def_lang as deflang
		   ,note
		   ,active
		FROM
			member
		WHERE
			username = #username#
		AND
			del_flag = false
	]]>
 	</select>

</sqlMap>
